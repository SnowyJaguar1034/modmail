version: "3"

networks:
  backend:
    driver: bridge
    name: backend
  default:
    driver: bridge
    name: internal

services:

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - default
      - backend
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - default
    restart: unless-stopped

  logviewer:
    build:
      context: ..
      dockerfile: docker/web/Dockerfile
    image: chamburr/modmail-web:latest
    container_name: logviewer
    networks:
      - backend
    restart: unless-stopped
    ports:
      - ${WEB_PORT}:6000
      - 80:80
      - 444:443
    environment:
      - BASE_URI=${BASE_URI}
      - HTTP_HOST=0.0.0.0
      - HTTP_PORT=${HTTP_PORT}
      - API_HOST=logviewer
      - API_PORT=6001
    depends_on:
      - logfetcher
  
  logfetcher:
    build:
      context: ..
      dockerfile: docker/api/Dockerfile
    image: chamburr/modmail-api:latest
    container_name: logfetcher
    networks:
      - backend
      - default
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - BOT_CLIENT_ID=${BOT_CLIENT_ID}
      - BOT_CLIENT_SECRET=${BOT_CLIENT_SECRET}
      - MAIN_SERVER=0
      - PREMIUM1_ROLE=0
      - PREMIUM3_ROLE=0
      - PREMIUM5_ROLE=0
      - PAYMENT_CHANNEL=0
      - PATRON_CHANNEL=0
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=
      - BASE_URI=${BASE_URI}
      - API_HOST=0.0.0.0
      - API_PORT=6001
      - API_WORKERS=1
      - API_SECRET=${API_SECRET}
      - BOT_API_HOST=
    depends_on:
      - cache
  
  cache:
    image: redis:7-alpine
    restart: unless-stopped
    container_name: cache
    networks:
      - default
     

  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    container_name: nginx-proxy-manager
    networks:
      - default
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
      # Add any other Stream port you want to expose
      # - '21:21' # FTP
    # Uncomment the next line if you uncomment anything in the section
    # environment:
      # Uncomment this if you want to change the location of
      # the SQLite DB file within the container
      # DB_SQLITE_FILE: "/data/database.sqlite"
      # Uncomment this if IPv6 is not enabled on your host
      - DISABLE_IPV6: 'true'
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt

  goaccess:
    image: 'xavierh/goaccess-for-nginxproxymanager:latest'
    container_name: goaccess
    restart: unless-stopped
    networks:
      - default
    environment:
        - TZ=Europe/London
    ports:
        - '7880:7880'
    volumes:
        - npm_logs:/opt/log

volumes:
    postgres:
    pgadmin:
    npm_data:
    npm_letsencrypt:
    npm_logs:
  
# rabbitmqctl add_vhost qa1
